{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","console","log","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE1B,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,4BAAQA,GAAR,CAAcP,OAChCC,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,sCCRlBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCERO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECLyB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDZwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAYpB,OAVAO,QAAQC,IAAIR,GAWR,qCACI,6BAAMpB,IACLoB,GAAY,mBAAGJ,UAAU,mDAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADEA,EAAIC,aE1B1BkB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmBC,EAAnB,KAMA,OACI,gCAGI,8CACA,cAAC,EAAD,CAAa9C,YAAiB8C,IAE9B,uBAEA,6BAEQD,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,Y,MCpBjCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3376b951.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Hola Mundo');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategory(  cats => [...cats, inputValue] );\r\n            setInputValue('');\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n          <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","export const getGifts = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Ze3jLVqgCdP79XR2UrUzAOtYSENeYX8q`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    // console.log( title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\" >\r\n            {/* { img.title } */}\r\n            <img src={  url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'\r\n// import { getGifts } from '../helpers/getGifts';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifts(category);\r\n\r\n    console.log(loading);\r\n\r\n    // useEffect( () => {\r\n    //     getGifts( category )\r\n    //       .then( imgs => setImages( imgs) ) //El helper devuelve las imgs y las cargo con el useSate()\r\n    // }, [ category ]); \r\n\r\n\r\n    // getGifts();\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {loading &&  <p className=\"animate__animated animate__bounce animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\" >\r\n                {\r\n                    images.map(  img =>\r\n                        <GifGridItem  \r\n                            key= { img.id }\r\n                            { ...img } \r\n                        />\r\n                    )\r\n                /* <ol> \r\n                    {\r\n                        // images.map( img => <li key={img.id}>{img.title}</li>) \r\n                        // images.map( ({id, title}) =>  <li key={id}> { title } </li> )\r\n                    }\r\n                </ol> */\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories , \"Andres\"]);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* <button onClick={ handleAdd } >Agregar</button> */}\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory = {  setCategories }/>\r\n\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category = {category}\r\n                        />    \r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}